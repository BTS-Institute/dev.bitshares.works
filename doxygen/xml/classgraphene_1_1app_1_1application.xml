<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="classgraphene_1_1app_1_1application" kind="class" language="C++" prot="public">
    <compoundname>graphene::app::application</compoundname>
    <includes refid="application_8hpp" local="no">application.hpp</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="classgraphene_1_1app_1_1application_1a695e67b3eafbf752b6350c7313ef10f7" prot="public" static="no" mutable="no">
        <type>boost::signals2::signal&lt; void()&gt;</type>
        <definition>boost::signals2::signal&lt;void()&gt; graphene::app::application::syncing_finished</definition>
        <argsstring></argsstring>
        <name>syncing_finished</name>
        <briefdescription>
<para>Emitted when syncing finishes (is_finished_syncing will return true) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/app/include/graphene/app/application.hpp" line="140" column="1" bodyfile="libraries/app/include/graphene/app/application.hpp" bodystart="140" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classgraphene_1_1app_1_1application_1a668e7fd37142a4612699270e4fec37bc" prot="public" static="no" mutable="no">
        <type>std::shared_ptr&lt; <ref refid="classfc_1_1thread" kindref="compound">fc::thread</ref> &gt;</type>
        <definition>std::shared_ptr&lt;fc::thread&gt; graphene::app::application::elasticsearch_thread</definition>
        <argsstring></argsstring>
        <name>elasticsearch_thread</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/app/include/graphene/app/application.hpp" line="148" column="1" bodyfile="libraries/app/include/graphene/app/application.hpp" bodystart="148" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classgraphene_1_1app_1_1application_1a942969c3aa92dc532278d1126f811b70" prot="private" static="no" mutable="no">
        <type>std::shared_ptr&lt; <ref refid="classgraphene_1_1app_1_1detail_1_1application__impl" kindref="compound">detail::application_impl</ref> &gt;</type>
        <definition>std::shared_ptr&lt;detail::application_impl&gt; graphene::app::application::my</definition>
        <argsstring></argsstring>
        <name>my</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/app/include/graphene/app/application.hpp" line="152" column="1" bodyfile="libraries/app/include/graphene/app/application.hpp" bodystart="152" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classgraphene_1_1app_1_1application_1a32ef9ba9a959799937668ad5a5d25cc0" prot="private" static="no" mutable="no">
        <type>boost::program_options::options_description</type>
        <definition>boost::program_options::options_description graphene::app::application::_cli_options</definition>
        <argsstring></argsstring>
        <name>_cli_options</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/app/include/graphene/app/application.hpp" line="154" column="1" bodyfile="libraries/app/include/graphene/app/application.hpp" bodystart="154" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classgraphene_1_1app_1_1application_1a69237dc67886f006a99892de75ed0829" prot="private" static="no" mutable="no">
        <type>boost::program_options::options_description</type>
        <definition>boost::program_options::options_description graphene::app::application::_cfg_options</definition>
        <argsstring></argsstring>
        <name>_cfg_options</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/app/include/graphene/app/application.hpp" line="155" column="1" bodyfile="libraries/app/include/graphene/app/application.hpp" bodystart="155" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classgraphene_1_1app_1_1application_1a26da774787b3b3b7ad711c91f2730984" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>graphene::app::application::application</definition>
        <argsstring>()</argsstring>
        <name>application</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/app/include/graphene/app/application.hpp" line="81" column="1" bodyfile="libraries/app/application.cpp" bodystart="958" bodyend="960"/>
      </memberdef>
      <memberdef kind="function" id="classgraphene_1_1app_1_1application_1a52c41787f656c18fadf1ab4ad80622f1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>graphene::app::application::~application</definition>
        <argsstring>()</argsstring>
        <name>~application</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/app/include/graphene/app/application.hpp" line="82" column="1" bodyfile="libraries/app/application.cpp" bodystart="962" bodyend="973"/>
      </memberdef>
      <memberdef kind="function" id="classgraphene_1_1app_1_1application_1a4a0e166965585fbac51264e37ae46f89" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void graphene::app::application::set_program_options</definition>
        <argsstring>(boost::program_options::options_description &amp;command_line_options, boost::program_options::options_description &amp;configuration_file_options) const </argsstring>
        <name>set_program_options</name>
        <param>
          <type>boost::program_options::options_description &amp;</type>
          <declname>command_line_options</declname>
        </param>
        <param>
          <type>boost::program_options::options_description &amp;</type>
          <declname>configuration_file_options</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/app/include/graphene/app/application.hpp" line="84" column="1" bodyfile="libraries/app/application.cpp" bodystart="975" bodyend="1074"/>
      </memberdef>
      <memberdef kind="function" id="classgraphene_1_1app_1_1application_1a03bacda67229d058034d478751b4da08" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void graphene::app::application::initialize</definition>
        <argsstring>(const fc::path &amp;data_dir, const boost::program_options::variables_map &amp;options)</argsstring>
        <name>initialize</name>
        <param>
          <type>const <ref refid="classfc_1_1path" kindref="compound">fc::path</ref> &amp;</type>
          <declname>data_dir</declname>
        </param>
        <param>
          <type>const boost::program_options::variables_map &amp;</type>
          <declname>options</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/app/include/graphene/app/application.hpp" line="86" column="1" bodyfile="libraries/app/application.cpp" bodystart="1076" bodyend="1086"/>
      </memberdef>
      <memberdef kind="function" id="classgraphene_1_1app_1_1application_1a16a9f54da2720e1690ecf2c02f1b51d0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void graphene::app::application::initialize_plugins</definition>
        <argsstring>(const boost::program_options::variables_map &amp;options)</argsstring>
        <name>initialize_plugins</name>
        <param>
          <type>const boost::program_options::variables_map &amp;</type>
          <declname>options</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/app/include/graphene/app/application.hpp" line="87" column="1" bodyfile="libraries/app/application.cpp" bodystart="1182" bodyend="1187"/>
      </memberdef>
      <memberdef kind="function" id="classgraphene_1_1app_1_1application_1a6b01a275a74bbe1bebdaaa83257897bb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void graphene::app::application::startup</definition>
        <argsstring>()</argsstring>
        <name>startup</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/app/include/graphene/app/application.hpp" line="88" column="1" bodyfile="libraries/app/application.cpp" bodystart="1088" bodyend="1099"/>
      </memberdef>
      <memberdef kind="function" id="classgraphene_1_1app_1_1application_1a72455823ffb2df44752ec224ca292414" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void graphene::app::application::shutdown</definition>
        <argsstring>()</argsstring>
        <name>shutdown</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/app/include/graphene/app/application.hpp" line="89" column="1" bodyfile="libraries/app/application.cpp" bodystart="1171" bodyend="1180"/>
      </memberdef>
      <memberdef kind="function" id="classgraphene_1_1app_1_1application_1abc4a8c64f729d58289f8bcbc24737fa8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void graphene::app::application::startup_plugins</definition>
        <argsstring>()</argsstring>
        <name>startup_plugins</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/app/include/graphene/app/application.hpp" line="90" column="1" bodyfile="libraries/app/application.cpp" bodystart="1189" bodyend="1197"/>
      </memberdef>
      <memberdef kind="function" id="classgraphene_1_1app_1_1application_1a6e5c4ead1d57f9326a58c29fcfdfaeef" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void graphene::app::application::shutdown_plugins</definition>
        <argsstring>()</argsstring>
        <name>shutdown_plugins</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/app/include/graphene/app/application.hpp" line="91" column="1" bodyfile="libraries/app/application.cpp" bodystart="1165" bodyend="1170"/>
      </memberdef>
      <memberdef kind="function" id="classgraphene_1_1app_1_1application_1ad89975a3ad9f2e31511a94a9e4d5630a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename PluginType</type>
          </param>
        </templateparamlist>
        <type>std::shared_ptr&lt; PluginType &gt;</type>
        <definition>std::shared_ptr&lt;PluginType&gt; graphene::app::application::register_plugin</definition>
        <argsstring>(bool auto_load=false)</argsstring>
        <name>register_plugin</name>
        <param>
          <type>bool</type>
          <declname>auto_load</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/app/include/graphene/app/application.hpp" line="94" column="1" bodyfile="libraries/app/include/graphene/app/application.hpp" bodystart="94" bodyend="119"/>
      </memberdef>
      <memberdef kind="function" id="classgraphene_1_1app_1_1application_1aa873a24f5931850d94ce78e2d0525a39" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::shared_ptr&lt; <ref refid="classgraphene_1_1app_1_1abstract__plugin" kindref="compound">abstract_plugin</ref> &gt;</type>
        <definition>std::shared_ptr&lt; abstract_plugin &gt; graphene::app::application::get_plugin</definition>
        <argsstring>(const string &amp;name) const </argsstring>
        <name>get_plugin</name>
        <param>
          <type>const string &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/app/include/graphene/app/application.hpp" line="120" column="1" bodyfile="libraries/app/application.cpp" bodystart="1113" bodyend="1116"/>
      </memberdef>
      <memberdef kind="function" id="classgraphene_1_1app_1_1application_1a62363fc6a56481fb96a703261527ba99" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename PluginType</type>
          </param>
        </templateparamlist>
        <type>std::shared_ptr&lt; PluginType &gt;</type>
        <definition>std::shared_ptr&lt;PluginType&gt; graphene::app::application::get_plugin</definition>
        <argsstring>(const string &amp;name) const </argsstring>
        <name>get_plugin</name>
        <param>
          <type>const string &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/app/include/graphene/app/application.hpp" line="123" column="1" bodyfile="libraries/app/include/graphene/app/application.hpp" bodystart="123" bodyend="129"/>
      </memberdef>
      <memberdef kind="function" id="classgraphene_1_1app_1_1application_1ac6be3372ebe64a14abe6d5c6a26b0f0b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacegraphene_1_1net_1ad97d72f1316982932a07e4b2df43aac5" kindref="member">net::node_ptr</ref></type>
        <definition>net::node_ptr graphene::app::application::p2p_node</definition>
        <argsstring>()</argsstring>
        <name>p2p_node</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/app/include/graphene/app/application.hpp" line="131" column="1" bodyfile="libraries/app/application.cpp" bodystart="1123" bodyend="1126"/>
      </memberdef>
      <memberdef kind="function" id="classgraphene_1_1app_1_1application_1aa7f74415aa5450794c35b6e1e33bc289" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::shared_ptr&lt; <ref refid="classgraphene_1_1chain_1_1database" kindref="compound">chain::database</ref> &gt;</type>
        <definition>std::shared_ptr&lt; chain::database &gt; graphene::app::application::chain_database</definition>
        <argsstring>() const </argsstring>
        <name>chain_database</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/app/include/graphene/app/application.hpp" line="132" column="1" bodyfile="libraries/app/application.cpp" bodystart="1128" bodyend="1131"/>
      </memberdef>
      <memberdef kind="function" id="classgraphene_1_1app_1_1application_1ab3a7cb3e8f8562a8d1c897103617d2ba" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void graphene::app::application::set_api_limit</definition>
        <argsstring>()</argsstring>
        <name>set_api_limit</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/app/include/graphene/app/application.hpp" line="133" column="1" bodyfile="libraries/app/application.cpp" bodystart="1101" bodyend="1112"/>
      </memberdef>
      <memberdef kind="function" id="classgraphene_1_1app_1_1application_1a6901555c199caa9535f30375667df3f0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void graphene::app::application::set_block_production</definition>
        <argsstring>(bool producing_blocks)</argsstring>
        <name>set_block_production</name>
        <param>
          <type>bool</type>
          <declname>producing_blocks</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/app/include/graphene/app/application.hpp" line="134" column="1" bodyfile="libraries/app/application.cpp" bodystart="1133" bodyend="1136"/>
      </memberdef>
      <memberdef kind="function" id="classgraphene_1_1app_1_1application_1a71ba65fec71dab0e0f01603eccc83cca" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classfc_1_1optional" kindref="compound">fc::optional</ref>&lt; <ref refid="structgraphene_1_1app_1_1api__access__info" kindref="compound">api_access_info</ref> &gt;</type>
        <definition>optional&lt; api_access_info &gt; graphene::app::application::get_api_access_info</definition>
        <argsstring>(const string &amp;username) const </argsstring>
        <name>get_api_access_info</name>
        <param>
          <type>const string &amp;</type>
          <declname>username</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/app/include/graphene/app/application.hpp" line="135" column="1" bodyfile="libraries/app/application.cpp" bodystart="1138" bodyend="1141"/>
      </memberdef>
      <memberdef kind="function" id="classgraphene_1_1app_1_1application_1a327e69e154b57da1da036166cb61d154" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void graphene::app::application::set_api_access_info</definition>
        <argsstring>(const string &amp;username, api_access_info &amp;&amp;permissions)</argsstring>
        <name>set_api_access_info</name>
        <param>
          <type>const string &amp;</type>
          <declname>username</declname>
        </param>
        <param>
          <type><ref refid="structgraphene_1_1app_1_1api__access__info" kindref="compound">api_access_info</ref> &amp;&amp;</type>
          <declname>permissions</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/app/include/graphene/app/application.hpp" line="136" column="1" bodyfile="libraries/app/application.cpp" bodystart="1143" bodyend="1146"/>
      </memberdef>
      <memberdef kind="function" id="classgraphene_1_1app_1_1application_1a8e0c376c2c28e8a456acde8747090b29" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool graphene::app::application::is_finished_syncing</definition>
        <argsstring>() const </argsstring>
        <name>is_finished_syncing</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/app/include/graphene/app/application.hpp" line="138" column="1" bodyfile="libraries/app/application.cpp" bodystart="1148" bodyend="1151"/>
      </memberdef>
      <memberdef kind="function" id="classgraphene_1_1app_1_1application_1a27e57fad3d041f065c7a86d34e95cc81" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classgraphene_1_1app_1_1application__options" kindref="compound">application_options</ref> &amp;</type>
        <definition>const application_options &amp; graphene::app::application::get_options</definition>
        <argsstring>()</argsstring>
        <name>get_options</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/app/include/graphene/app/application.hpp" line="142" column="1" bodyfile="libraries/app/application.cpp" bodystart="1199" bodyend="1202"/>
      </memberdef>
      <memberdef kind="function" id="classgraphene_1_1app_1_1application_1ac96d67f1d2d9ba8cb18dcc9f4ea5ad38" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void graphene::app::application::enable_plugin</definition>
        <argsstring>(const string &amp;name)</argsstring>
        <name>enable_plugin</name>
        <param>
          <type>const string &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/app/include/graphene/app/application.hpp" line="144" column="1" bodyfile="libraries/app/application.cpp" bodystart="1153" bodyend="1158"/>
      </memberdef>
      <memberdef kind="function" id="classgraphene_1_1app_1_1application_1a5bc7ec9062f0450ed24ab0c9d6f91a6e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool graphene::app::application::is_plugin_enabled</definition>
        <argsstring>(const string &amp;name) const </argsstring>
        <name>is_plugin_enabled</name>
        <param>
          <type>const string &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/app/include/graphene/app/application.hpp" line="146" column="1" bodyfile="libraries/app/application.cpp" bodystart="1118" bodyend="1121"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classgraphene_1_1app_1_1application_1a340050dc4a0ba5e7702b0fbe286bbf04" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void graphene::app::application::add_available_plugin</definition>
        <argsstring>(std::shared_ptr&lt; abstract_plugin &gt; p)</argsstring>
        <name>add_available_plugin</name>
        <param>
          <type>std::shared_ptr&lt; <ref refid="classgraphene_1_1app_1_1abstract__plugin" kindref="compound">abstract_plugin</ref> &gt;</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/app/include/graphene/app/application.hpp" line="151" column="1" bodyfile="libraries/app/application.cpp" bodystart="1160" bodyend="1163"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="libraries/app/include/graphene/app/application.hpp" line="79" column="1" bodyfile="libraries/app/include/graphene/app/application.hpp" bodystart="78" bodyend="156"/>
    <listofallmembers>
      <member refid="classgraphene_1_1app_1_1application_1a69237dc67886f006a99892de75ed0829" prot="private" virt="non-virtual"><scope>graphene::app::application</scope><name>_cfg_options</name></member>
      <member refid="classgraphene_1_1app_1_1application_1a32ef9ba9a959799937668ad5a5d25cc0" prot="private" virt="non-virtual"><scope>graphene::app::application</scope><name>_cli_options</name></member>
      <member refid="classgraphene_1_1app_1_1application_1a340050dc4a0ba5e7702b0fbe286bbf04" prot="private" virt="non-virtual"><scope>graphene::app::application</scope><name>add_available_plugin</name></member>
      <member refid="classgraphene_1_1app_1_1application_1a26da774787b3b3b7ad711c91f2730984" prot="public" virt="non-virtual"><scope>graphene::app::application</scope><name>application</name></member>
      <member refid="classgraphene_1_1app_1_1application_1aa7f74415aa5450794c35b6e1e33bc289" prot="public" virt="non-virtual"><scope>graphene::app::application</scope><name>chain_database</name></member>
      <member refid="classgraphene_1_1app_1_1application_1a668e7fd37142a4612699270e4fec37bc" prot="public" virt="non-virtual"><scope>graphene::app::application</scope><name>elasticsearch_thread</name></member>
      <member refid="classgraphene_1_1app_1_1application_1ac96d67f1d2d9ba8cb18dcc9f4ea5ad38" prot="public" virt="non-virtual"><scope>graphene::app::application</scope><name>enable_plugin</name></member>
      <member refid="classgraphene_1_1app_1_1application_1a71ba65fec71dab0e0f01603eccc83cca" prot="public" virt="non-virtual"><scope>graphene::app::application</scope><name>get_api_access_info</name></member>
      <member refid="classgraphene_1_1app_1_1application_1a27e57fad3d041f065c7a86d34e95cc81" prot="public" virt="non-virtual"><scope>graphene::app::application</scope><name>get_options</name></member>
      <member refid="classgraphene_1_1app_1_1application_1aa873a24f5931850d94ce78e2d0525a39" prot="public" virt="non-virtual"><scope>graphene::app::application</scope><name>get_plugin</name></member>
      <member refid="classgraphene_1_1app_1_1application_1a62363fc6a56481fb96a703261527ba99" prot="public" virt="non-virtual"><scope>graphene::app::application</scope><name>get_plugin</name></member>
      <member refid="classgraphene_1_1app_1_1application_1a03bacda67229d058034d478751b4da08" prot="public" virt="non-virtual"><scope>graphene::app::application</scope><name>initialize</name></member>
      <member refid="classgraphene_1_1app_1_1application_1a16a9f54da2720e1690ecf2c02f1b51d0" prot="public" virt="non-virtual"><scope>graphene::app::application</scope><name>initialize_plugins</name></member>
      <member refid="classgraphene_1_1app_1_1application_1a8e0c376c2c28e8a456acde8747090b29" prot="public" virt="non-virtual"><scope>graphene::app::application</scope><name>is_finished_syncing</name></member>
      <member refid="classgraphene_1_1app_1_1application_1a5bc7ec9062f0450ed24ab0c9d6f91a6e" prot="public" virt="non-virtual"><scope>graphene::app::application</scope><name>is_plugin_enabled</name></member>
      <member refid="classgraphene_1_1app_1_1application_1a942969c3aa92dc532278d1126f811b70" prot="private" virt="non-virtual"><scope>graphene::app::application</scope><name>my</name></member>
      <member refid="classgraphene_1_1app_1_1application_1ac6be3372ebe64a14abe6d5c6a26b0f0b" prot="public" virt="non-virtual"><scope>graphene::app::application</scope><name>p2p_node</name></member>
      <member refid="classgraphene_1_1app_1_1application_1ad89975a3ad9f2e31511a94a9e4d5630a" prot="public" virt="non-virtual"><scope>graphene::app::application</scope><name>register_plugin</name></member>
      <member refid="classgraphene_1_1app_1_1application_1a327e69e154b57da1da036166cb61d154" prot="public" virt="non-virtual"><scope>graphene::app::application</scope><name>set_api_access_info</name></member>
      <member refid="classgraphene_1_1app_1_1application_1ab3a7cb3e8f8562a8d1c897103617d2ba" prot="public" virt="non-virtual"><scope>graphene::app::application</scope><name>set_api_limit</name></member>
      <member refid="classgraphene_1_1app_1_1application_1a6901555c199caa9535f30375667df3f0" prot="public" virt="non-virtual"><scope>graphene::app::application</scope><name>set_block_production</name></member>
      <member refid="classgraphene_1_1app_1_1application_1a4a0e166965585fbac51264e37ae46f89" prot="public" virt="non-virtual"><scope>graphene::app::application</scope><name>set_program_options</name></member>
      <member refid="classgraphene_1_1app_1_1application_1a72455823ffb2df44752ec224ca292414" prot="public" virt="non-virtual"><scope>graphene::app::application</scope><name>shutdown</name></member>
      <member refid="classgraphene_1_1app_1_1application_1a6e5c4ead1d57f9326a58c29fcfdfaeef" prot="public" virt="non-virtual"><scope>graphene::app::application</scope><name>shutdown_plugins</name></member>
      <member refid="classgraphene_1_1app_1_1application_1a6b01a275a74bbe1bebdaaa83257897bb" prot="public" virt="non-virtual"><scope>graphene::app::application</scope><name>startup</name></member>
      <member refid="classgraphene_1_1app_1_1application_1abc4a8c64f729d58289f8bcbc24737fa8" prot="public" virt="non-virtual"><scope>graphene::app::application</scope><name>startup_plugins</name></member>
      <member refid="classgraphene_1_1app_1_1application_1a695e67b3eafbf752b6350c7313ef10f7" prot="public" virt="non-virtual"><scope>graphene::app::application</scope><name>syncing_finished</name></member>
      <member refid="classgraphene_1_1app_1_1application_1a52c41787f656c18fadf1ab4ad80622f1" prot="public" virt="non-virtual"><scope>graphene::app::application</scope><name>~application</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
