<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="classfc_1_1asio_1_1ostream" kind="class" language="C++" prot="public">
    <compoundname>fc::asio::ostream</compoundname>
    <basecompoundref refid="classfc_1_1ostream" prot="public" virt="virtual">fc::ostream</basecompoundref>
    <includes refid="asio_8hpp" local="no">asio.hpp</includes>
    <templateparamlist>
      <param>
        <type>typename AsyncWriteStream</type>
      </param>
    </templateparamlist>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classfc_1_1asio_1_1ostream_1a2ddf24f004de1651a1eb2f8507a5d66b" prot="private" static="no" mutable="no">
        <type>std::shared_ptr&lt; AsyncWriteStream &gt;</type>
        <definition>std::shared_ptr&lt;AsyncWriteStream&gt; fc::asio::ostream&lt; AsyncWriteStream &gt;::_stream</definition>
        <argsstring></argsstring>
        <name>_stream</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/asio.hpp" line="319" column="1" bodyfile="libraries/fc/include/fc/asio.hpp" bodystart="319" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classfc_1_1asio_1_1ostream_1ae5076dce37cc78c9cad73b5aa0357e3d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>fc::asio::ostream&lt; AsyncWriteStream &gt;::ostream</definition>
        <argsstring>(std::shared_ptr&lt; AsyncWriteStream &gt; str)</argsstring>
        <name>ostream</name>
        <param>
          <type>std::shared_ptr&lt; AsyncWriteStream &gt;</type>
          <declname>str</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/asio.hpp" line="303" column="1" bodyfile="libraries/fc/include/fc/asio.hpp" bodystart="303" bodyend="304"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1asio_1_1ostream_1a0c14ce0e9c9d2431009e3d720e11a175" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>size_t</type>
        <definition>virtual size_t fc::asio::ostream&lt; AsyncWriteStream &gt;::writesome</definition>
        <argsstring>(const char *buf, size_t len)</argsstring>
        <name>writesome</name>
        <reimplements refid="classfc_1_1ostream_1aac50b472ffc544ec0b171c5df21f4505">writesome</reimplements>
        <param>
          <type>const char *</type>
          <declname>buf</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>len</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/asio.hpp" line="306" column="1" bodyfile="libraries/fc/include/fc/asio.hpp" bodystart="306" bodyend="309"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1asio_1_1ostream_1ae1a989d93a42da41161ecc3eefef6cf8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>size_t</type>
        <definition>virtual size_t fc::asio::ostream&lt; AsyncWriteStream &gt;::writesome</definition>
        <argsstring>(const std::shared_ptr&lt; const char &gt; &amp;buf, size_t len, size_t offset)</argsstring>
        <name>writesome</name>
        <reimplements refid="classfc_1_1ostream_1acb234eb77ec18eef2c2aeef8f645a862">writesome</reimplements>
        <param>
          <type>const std::shared_ptr&lt; const char &gt; &amp;</type>
          <declname>buf</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>len</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>offset</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/asio.hpp" line="311" column="1" bodyfile="libraries/fc/include/fc/asio.hpp" bodystart="311" bodyend="314"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1asio_1_1ostream_1a452ac1d8b8be67a81ebc9d9f79f12bf1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void fc::asio::ostream&lt; AsyncWriteStream &gt;::close</definition>
        <argsstring>()</argsstring>
        <name>close</name>
        <reimplements refid="classfc_1_1ostream_1ab0055550951d519b5cf95c2f4d07379c">close</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/asio.hpp" line="316" column="1" bodyfile="libraries/fc/include/fc/asio.hpp" bodystart="316" bodyend="316"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1asio_1_1ostream_1aeb6d89eb1b26c697d22962b2eed2d8c6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void fc::asio::ostream&lt; AsyncWriteStream &gt;::flush</definition>
        <argsstring>()</argsstring>
        <name>flush</name>
        <reimplements refid="classfc_1_1ostream_1af0a9d82410120b00b036462594f05549">flush</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/asio.hpp" line="317" column="1" bodyfile="libraries/fc/include/fc/asio.hpp" bodystart="317" bodyend="317"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="5297">
        <label>fc::asio::ostream&lt; AsyncWriteStream &gt;</label>
        <link refid="classfc_1_1asio_1_1ostream"/>
        <childnode refid="5298" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5298">
        <label>fc::ostream</label>
        <link refid="classfc_1_1ostream"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="5299">
        <label>fc::asio::ostream&lt; AsyncWriteStream &gt;</label>
        <link refid="classfc_1_1asio_1_1ostream"/>
        <childnode refid="5300" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5300">
        <label>fc::ostream</label>
        <link refid="classfc_1_1ostream"/>
      </node>
    </collaborationgraph>
    <location file="libraries/fc/include/fc/asio.hpp" line="301" column="1" bodyfile="libraries/fc/include/fc/asio.hpp" bodystart="300" bodyend="320"/>
    <listofallmembers>
      <member refid="classfc_1_1asio_1_1ostream_1a2ddf24f004de1651a1eb2f8507a5d66b" prot="private" virt="non-virtual"><scope>fc::asio::ostream</scope><name>_stream</name></member>
      <member refid="classfc_1_1asio_1_1ostream_1a452ac1d8b8be67a81ebc9d9f79f12bf1" prot="public" virt="virtual"><scope>fc::asio::ostream</scope><name>close</name></member>
      <member refid="classfc_1_1asio_1_1ostream_1aeb6d89eb1b26c697d22962b2eed2d8c6" prot="public" virt="virtual"><scope>fc::asio::ostream</scope><name>flush</name></member>
      <member refid="classfc_1_1asio_1_1ostream_1ae5076dce37cc78c9cad73b5aa0357e3d" prot="public" virt="non-virtual"><scope>fc::asio::ostream</scope><name>ostream</name></member>
      <member refid="classfc_1_1ostream_1a5eb546403297f3a0124af202d9544fc4" prot="public" virt="non-virtual"><scope>fc::asio::ostream</scope><name>put</name></member>
      <member refid="classfc_1_1ostream_1a8abbd25d7d136527d1bb36c1ca24427e" prot="public" virt="non-virtual"><scope>fc::asio::ostream</scope><name>write</name></member>
      <member refid="classfc_1_1ostream_1afa09d563e34c1e16aee4709d4a47483a" prot="public" virt="non-virtual"><scope>fc::asio::ostream</scope><name>write</name></member>
      <member refid="classfc_1_1asio_1_1ostream_1a0c14ce0e9c9d2431009e3d720e11a175" prot="public" virt="virtual"><scope>fc::asio::ostream</scope><name>writesome</name></member>
      <member refid="classfc_1_1asio_1_1ostream_1ae1a989d93a42da41161ecc3eefef6cf8" prot="public" virt="virtual"><scope>fc::asio::ostream</scope><name>writesome</name></member>
      <member refid="classfc_1_1ostream_1aa2ed925328be7251755abfb9ca5f01d2" prot="public" virt="virtual"><scope>fc::asio::ostream</scope><name>~ostream</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
